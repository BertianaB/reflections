----------------------------------------------------------------
How did viewing a diff between two versions of a file help you see the bug that was introduced?

By reducing the number of lines I had to look at.

----------------------------------------------------------------
How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

I can undo mistakes without rewriting the entire code.

----------------------------------------------------------------
What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

pros:	your commits are logically divided, therefor more useful
		tracking accross files are possible
cons: even if you don't commit, you will have a version saved

----------------------------------------------------------------
Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Usually the changes to different files are not correlating, but when coding they are usually related.
cons: even if you don't commit, you will have a version saved

----------------------------------------------------------------
How can you use the commands git log and git diff to view the history of files?

git log shows all the commits' ids. With diff and two commits' ids I see what changed from one commit to one other.

----------------------------------------------------------------
How might using version control make you more confident to make changes that could break something?

I commit before and after the "at risk" change, knowing I can go back and change that again if I break something.

----------------------------------------------------------------
Now that you have your workspace set up, what do you want to try using Git for?

All my projects.